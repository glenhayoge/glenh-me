{
  "version": 3,
  "sources": ["../../../contentlayer.config.js", "../../../config/mdx.tsx"],
  "sourcesContent": ["import { defineDocumentType, defineNestedType, makeSource } from 'contentlayer/source-files'\nimport readingTime from 'reading-time';\nimport mdxOptions from './config/mdx';\n\nconst Author = defineNestedType(() => ({\n  name: 'Author',\n  fields: {\n    name: { type: 'string', required: true },\n    image: { type: 'string', required: true },\n  },\n}));\n\nconst Article = defineDocumentType(() => ({\n  name: 'Article',\n  filePathPattern: `articles/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    publishedAt: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    seoDescription: { type: 'string', required: true },\n    category: { type: 'string', required: true },\n    author: {\n      type: 'nested',\n      of: Author,\n    },\n    image: { type: 'string', required: true },\n  },\n  computedFields,\n}));\n\nconst computedFields = {\n    readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\n    wordCount: {\n      type: 'number',\n      resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n    },\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, ''),\n    },\n  };\n\n  const contentLayerConfig = makeSource({\n    contentDirPath:'.',\n    contentDirInclude: ['data','config'],\n    documentTypes: [Article],\n    mdx: mdxOptions,\n  });\n\n\n\n\nexport default contentLayerConfig;", "// config/md.ts\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeCodeTitles from 'rehype-code-titles';\nimport remarkExternalLinks from 'remark-external-links';\nimport rehypeImgSize from 'rehype-img-size';\nimport { Pluggable } from 'unified';\nimport remarkGfm from 'remark-gfm'\nimport rehypeSlug from 'rehype-slug'\nimport rehypePrism from 'rehype-prism-plus'\nimport { rehypeAccessibleEmojis } from 'rehype-accessible-emojis'\n\nconst mdxOptions = {\n  remarkPlugins: [remarkExternalLinks, remarkGfm],\n  rehypePlugins: [\n    rehypeSlug,\n    rehypeCodeTitles,\n    rehypePrism,\n    rehypeAutolinkHeadings,\n    rehypeAccessibleEmojis,\n    [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: ['anchor']\n          }\n        }\n      ],\n    [\n      rehypeImgSize,\n      {\n        dir: 'public',\n      },\n    ],\n  ] as Pluggable[],\n  compilers: [],\n};\n\nexport default mdxOptions;\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB,kBAAkB;AACjE,OAAO,iBAAiB;;;ACAxB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,yBAAyB;AAChC,OAAO,mBAAmB;AAE1B,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,iBAAiB;AACxB,SAAS,8BAA8B;AAEvC,IAAM,aAAa;AAAA,EACjB,eAAe,CAAC,qBAAqB,SAAS;AAAA,EAC9C,eAAe;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MACI;AAAA,MACA;AAAA,QACE,YAAY;AAAA,UACV,WAAW,CAAC,QAAQ;AAAA,QACtB;AAAA,MACF;AAAA,IACF;AAAA,IACF;AAAA,MACE;AAAA,MACA;AAAA,QACE,KAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW,CAAC;AACd;AAEA,IAAO,cAAQ;;;ADjCf,IAAM,SAAS,iBAAiB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AACF,EAAE;AAEF,IAAM,UAAU,mBAAmB,OAAO;AAAA,EACxC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,gBAAgB,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACjD,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,IACA,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AAAA,EACA;AACF,EAAE;AAEF,IAAM,iBAAiB;AAAA,EACnB,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EACzE,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,EAChD;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,EAChE;AACF;AAEA,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAe;AAAA,EACf,mBAAmB,CAAC,QAAO,QAAQ;AAAA,EACnC,eAAe,CAAC,OAAO;AAAA,EACvB,KAAK;AACP,CAAC;AAKH,IAAO,8BAAQ;",
  "names": []
}
