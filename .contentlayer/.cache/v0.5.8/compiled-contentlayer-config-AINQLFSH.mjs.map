{
  "version": 3,
  "sources": ["../../../contentlayer.config.js", "../../../config/md.mjs"],
  "sourcesContent": ["// import { defineDocumentType, defineNestedType, makeSource } from 'contentlayer/source-files'\nimport readingTime from 'reading-time'\nimport mdxOptions from './config/md.mjs'\nimport GithubSlugger from 'github-slugger'\nimport { defineDocumentType,defineNestedType, makeSource } from 'contentlayer2/source-files';\n// import rehypePrettyCode from 'rehype-pretty-code';\nimport rehypePrismPlus from 'rehype-prism-plus'\n\nconst Author = defineNestedType(() => ({\n  name: 'Author',\n  fields: {\n    name: { type: 'string', required: true },\n    image: { type: 'string', required: true },\n  },\n}))\n\nconst computedFields = {\n  readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\n  wordCount: {\n    type: 'number',\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n  },\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, ''),\n  },\n  headings: {\n    type: \"json\",\n    resolve: async (doc) => {\n      const regXHeader = /\\n(?<flag>#{1,6})\\s+(?<data>.+)/g;\n      const slugger = new GithubSlugger()\n      const headings = Array.from(doc.body.raw.matchAll(regXHeader)).map(\n          ({ groups }) => {\n            const flag = groups?.flag;\n            const data = groups?.data;\n            return {\n              level: flag?.length == 1 ? \"one\"\n              : flag?.length == 2 ? \"two\"\n              : \"three\",\n              text: data,\n              slug: data ? slugger.slug(data) : undefined\n            };\n          }\n        );\n        return headings;\n    },\n  },\n}\n\nconst Article = defineDocumentType(() => ({\n  name: 'Article',\n  filePathPattern: `articles/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    publishedAt: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    seoDescription: { type: 'string', required: true },\n    category: { type: 'string', required: true },\n    tags: { type: 'string', required: true },\n    caption: { type: 'string', required: true },\n    author: {\n      type: 'nested',\n      of: Author,\n    },\n    image: { type: 'string', required: true },\n    toc: {\n      type: \"boolean\",\n      required: true,\n      default: true,\n    },\n  },\n  computedFields,\n}))\n\nconst Snippet = defineDocumentType(() => ({\n  name: 'Snippet',\n  filePathPattern: `snippets/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    updatedAt: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    category: { type: 'string', required: true },\n    tags: { type: 'string', required: true },\n  },\n  computedFields,\n}))\n\nconst Books = defineDocumentType(() => ({\n  name: 'Book',\n  filePathPattern: `books/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    category: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    image: { type: 'string', required: true },\n    publishedAt: { type: 'string', required: true },\n    author: { type: 'string', required: true }\n  },\n  computedFields,\n}))\n\nexport default makeSource({\n  contentDirPath: 'data',\n  documentTypes: [Article, Books, Snippet],\n  mdx: mdxOptions\n})\n", "import rehypePrismPlus from 'rehype-prism-plus'\nimport rehypeSlug from 'rehype-slug'\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\nimport rehypeCodeTitles from 'rehype-code-titles'\nimport remarkGfm from 'remark-gfm'\nimport remarkExternalLinks from 'remark-external-links'\n\nexport default {\n  remarkPlugins: [\n    remarkGfm,\n    [remarkExternalLinks, { target: '_blank', rel: 'noopener noreferrer' }],\n  ],\n  rehypePlugins: [\n    rehypeCodeTitles,\n    rehypeSlug,\n    [\n      rehypeAutolinkHeadings,\n      {\n        properties: {\n          className: ['anchor'],\n        },\n      },\n    ],\n    [\n      rehypePrismPlus,\n      {\n        ignoreMissing: true,\n        showLineNumbers: true,\n      },\n    ],\n  ],\n} "],
  "mappings": "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",
  "names": ["rehypePrismPlus"]
}
