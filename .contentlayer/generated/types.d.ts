// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Article = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Article'
  title: string
  publishedAt: string
  description: string
  seoDescription: string
  category: string
  tags: string
  author: any
  image: string
  caption: string
  /** MDX file body */
  body: MDX
  slug: string
  readingTime: json
<<<<<<< HEAD
=======
  headings: json
>>>>>>> working-commit
}

export type Books = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Books'
  title: string
  publishedAt: string
  description: string
  category: string
  tags: string
  author: string
  image: string
  /** MDX file body */
  body: MDX
  slug: string
  readingTime: json
<<<<<<< HEAD
=======
  headings: json
>>>>>>> working-commit
}

export type Snippet = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Snippet'
  title: string
  updatedAt: string
  description: string
  category: string
  tags: string
  /** MDX file body */
  body: MDX
  slug: string
  readingTime: json
<<<<<<< HEAD
=======
  headings: json
>>>>>>> working-commit
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Article | Books | Snippet
export type DocumentTypeNames = 'Article' | 'Books' | 'Snippet'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allArticles: Article[]
  allBooks: Books[]
  allSnippets: Snippet[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Article: Article
  Books: Books
  Snippet: Snippet
}

export type NestedTypeMap = {

}

 