[
  {
    "title": "Git Commands",
    "updatedAt": "Mar 8, 2023",
    "description": "Useful Git Commands",
    "category": "Git",
    "body": {
      "raw": "\nSet up scripts for git workflow\n\nCreate a branch from another branch\n\n```\ngit checkout -b myFeature dev\n```\n\nCreates the _MyFeature_ branch off _dev_. Do your work and then\n\n```\ngit commit -am \"Your message\"\n```\n\nNow merge your changes to _dev_ without a fast-forward\n\n```\ngit checkout dev\ngit merge --no-ff myFeature\n```\n\nNow push the changes to the server\n\n```\ngit push origin dev\ngit push origin myFeature\n```\n\nAnd you'll see it how you want it.",
      "code": "var Component=(()=>{var l=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(c,e)=>()=>(e||c((e={exports:{}}).exports,e),e.exports),N=(c,e)=>{for(var r in e)i(c,r,{get:e[r],enumerable:!0})},o=(c,e,r,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of p(e))!u.call(c,t)&&t!==r&&i(c,t,{get:()=>e[t],enumerable:!(a=m(e,t))||a.enumerable});return c};var w=(c,e,r)=>(r=c!=null?l(g(c)):{},o(e||!c||!c.__esModule?i(r,\"default\",{value:c,enumerable:!0}):r,c)),y=c=>o(i({},\"__esModule\",{value:!0}),c);var d=f((C,s)=>{s.exports=_jsx_runtime});var b={};N(b,{default:()=>_,frontmatter:()=>x});var n=w(d()),x={title:\"Git Commands\",description:\"Useful Git Commands\",category:\"Git\",updatedAt:\"Mar 8, 2023\"};function h(c){let e=Object.assign({p:\"p\",pre:\"pre\",code:\"code\",span:\"span\",em:\"em\"},c.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"Set up scripts for git workflow\"}),`\n`,(0,n.jsx)(e.p,{children:\"Create a branch from another branch\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`git checkout -b myFeature dev\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Creates the\\xA0\",(0,n.jsx)(e.em,{children:\"MyFeature\"}),\"\\xA0branch off\\xA0\",(0,n.jsx)(e.em,{children:\"dev\"}),\". Do your work and then\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`git commit -am \"Your message\"\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now merge your changes to\\xA0\",(0,n.jsx)(e.em,{children:\"dev\"}),\"\\xA0without a fast-forward\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`git checkout dev\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`git merge --no-ff myFeature\n`})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Now push the changes to the server\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`git push origin dev\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`git push origin myFeature\n`})]})}),`\n`,(0,n.jsx)(e.p,{children:\"And you'll see it how you want it.\"})]})}function j(c={}){let{wrapper:e}=c.components||{};return e?(0,n.jsx)(e,Object.assign({},c,{children:(0,n.jsx)(h,c)})):h(c)}var _=j;return y(b);})();\n;return Component;"
    },
    "_id": "snippets/useful-git-commands.mdx",
    "_raw": {
      "sourceFilePath": "snippets/useful-git-commands.mdx",
      "sourceFileName": "useful-git-commands.mdx",
      "sourceFileDir": "snippets",
      "contentType": "mdx",
      "flattenedPath": "snippets/useful-git-commands"
    },
    "type": "Snippet",
    "readingTime": {
      "text": "1 min read",
      "minutes": 0.375,
      "time": 22500,
      "words": 75
    },
    "wordCount": 81,
    "slug": "useful-git-commands",
    "headings": []
  }
]